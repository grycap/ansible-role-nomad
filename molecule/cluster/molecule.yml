---
scenario:
  name: cluster
dependency:
  name: galaxy
driver:
  name: docker
verifier:
  name: ansible
platforms:
  - name: server0
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2204}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - front
      - init
      - front_init
    networks:
      - name: "nomad"
    network_mode: "nomad"
    published_ports:
      - 8501/tcp
      - 4646/tcp
  - name: server1
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2204}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - front
      - init
      - front_init
    networks:
      - name: "nomad"
    network_mode: "nomad"
    published_ports:
      - 8501/tcp
      - 4646/tcp
  - name: vnode-1
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2204}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - wn
      - init
    networks:
      - name: "nomad"
    network_mode: "nomad"
    published_ports:
      - 8501/tcp
      - 4646/tcp
  - name: servernew0
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2204}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - front
      - new
    networks:
      - name: "nomad"
    network_mode: "nomad"
    published_ports:
      - 8501/tcp
      - 4646/tcp
  - name: vnodenew-1
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2204}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - wn
      - new
    networks:
      - name: "nomad"
    network_mode: "nomad"
    published_ports:
      - 8501/tcp
      - 4646/tcp
provisioner:
  name: ansible
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-converge.yml}
  inventory:
    host_vars:
      server0:
        nomad_master: true
        consul_master: true
      servernew0:
        consul_bootstrap_expect: 3
    group_vars:
      all:
        nomad_name: "{{ inventory_hostname }}"
        consul_policies:
          - name: nomad-client-policy
            description: Consul Nomad Client Policy
            rules: |
              agent_prefix "" {
                policy = "read"
              }
              node_prefix "" {
                policy = "read"
              }
              service_prefix "" {
                policy = "write"
              }
              key_prefix "" {
                policy = "read"
              }
          - name: nomad-server-policy
            description: Consul Nomad Server Policy
            rules: |
              agent_prefix "" {
                policy = "read"
              }
              node_prefix "" {
                policy = "read"
              }
              service_prefix "" {
                policy = "write"
              }
              acl = "write"
      front:
        consul_ssl: true
        consul_address: "127.0.0.1:8501"
        server_enabled: true
        client_enabled: false
        nomad_master: false
        consul_master: false
        consul_server: true
        consul_bootstrap_expect: 2
      wn:
        consul_ssl: false
        consul_address: "127.0.0.1:8500"
        client_enabled: true
        server_enabled: false
        nomad_master: false
        consul_master: false
        consul_server: false
